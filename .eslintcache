[{"C:\\Users\\jonat\\Desktop\\Project\\table-of-restaurants\\src\\App.js":"1","C:\\Users\\jonat\\Desktop\\Project\\table-of-restaurants\\src\\reportWebVitals.js":"2","C:\\Users\\jonat\\Desktop\\Project\\table-of-restaurants\\src\\components\\RestarauntsTable.js":"3"},{"size":144,"mtime":1610004855846,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1609998207925,"results":"6","hashOfConfig":"5"},{"size":528,"mtime":1610006273013,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lngbgh",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jonat\\Desktop\\Project\\table-of-restaurants\\src\\App.js",[],"C:\\Users\\jonat\\Desktop\\Project\\table-of-restaurants\\src\\reportWebVitals.js",[],"C:\\Users\\jonat\\Desktop\\Project\\table-of-restaurants\\src\\components\\RestarauntsTable.js",["14","15"],{"ruleId":"16","severity":1,"message":"17","line":5,"column":10,"nodeType":"18","messageId":"19","endLine":5,"endColumn":21},{"ruleId":"20","severity":1,"message":"21","line":7,"column":13,"nodeType":"22","endLine":18,"endColumn":4},"no-unused-vars","'restaurants' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression"]